*, ::before, ::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html, body {
  block-size: 100%;
}

.container {
  /* setting variables */
  --lt-threshold-bit: 0;
  --side-width-base: 25%;
  --gap: 1.2rem; /* from size variable */
  --padding: 0.5rem; /* from size variable */
  --right-bit: 0;
  --toggle-bit: 1;
  --resize-bit: 1;
  --min-base: 10rem;
  --max-base: 60%;
  --collapse-ratio-base: 1;
  --expand-ratio-base: 1;
  /* fixed variables */
  --min: clamp(0, var(--min-base), 100% - var(--gap));
  --max: clamp(var(--min), var(--max-base), 100% - var(--gap));
  --side-width: clamp(var(--min), var(--side-width-base), var(--max));
  --collapse-ratio: clamp(0, var(--collapse-ratio-base), 1);
  --expand-ratio: clamp(0, var(--expand-ratio-base), 1);

  /* internal variables */
  /* side-toggle-when-lt-threshold */
  --side-toggle-when-lt-threshold-bit: 0;
  /* activate side-toggle-when-lt-threshold */
  &:has(> .toggle-area-when-lt-threshold > .toggle:checked) {
    --side-toggle-when-lt-threshold-bit: 1;
  }
  /* side-toggle */
  --side-toggle-bit: 0;
  /* activate side-toggle-bit */
  &:has(> .gap > .toggle:checked) {
    --side-toggle-bit: 1;
  }
  /* dragging-bit */
  --dragging-bit: 0;
  /* activate dragging-bit */
  &:has(> .resizer:active) {
    --dragging-bit: 1;
  }
  /* animation setting */
  /* collapsed-bit */
  --collapsed-base-bit: 0;
  /* expanded-bit */
  --expanded-base-bit: 0;
  animation: collapsed-capture 1ms infinite, expanded-capture 1ms infinite;
  animation-play-state: paused, paused;
  /* activate collapsed-bit */
  &:has(> .shadow > .collapse-area:hover) {
    --collapsed-base-bit: 1;
    animation-play-state: running, paused;
  }
  &:has(> .shadow > .collapse-area > .freeze:hover) {
    animation-play-state: paused, paused;
  }
  /* deactivate collapsed-bit */
  &:has(> .grow-area > .button:active) {
    animation-play-state: running, paused;
  }
  /* activate expanded-bit */
  &:has(> .shadow > .expand-area:hover) {
    --expanded-base-bit: 1;
    animation-play-state: paused, running;
  }
  &:has(> .shadow > .expand-area > .freeze:hover) {
    animation-play-state: paused, paused;
  }
  /* deactivate expanded-bit */
  &:has(> .shrink-area > .button:active) {
    animation-play-state: paused, running;
  }

  /* calculate variables */
  --left-bit: (1 - var(--right-bit));

  position: relative;
  block-size: 100%;

  > * {
    position: absolute;
    top: 0;
    bottom: 0;
    overflow: hidden;
    z-index: 1;
  }

  
}

@keyframes collapsed-capture {
  0%, 100% { --collapsed-bit: var(--collapsed-base-bit); }
}
@keyframes expanded-capture {
  0%, 100% { --expanded-bit: var(--expanded-base-bit); }
}
